---
title: "Cw1"
author: "Fabian Wieczorek"
format: html
self-contained: true
---

## Biblioteki
```{r}
library(tidymodels)
library(parsnip)
library(GGally)
library(broom)
library(dotwhisker)
```

## Zestaw danych
```{r}
colnames(airquality) <- tolower(colnames(airquality))

air <- 
  airquality |> 
  as_tibble() |> 
  na.omit() |> 
  select(-day) |> 
  mutate(month = factor(month))
  
```
`as_tible` - konwersja danych do formatu tible
`na.omit` - usunięcie obserwacji z brakiem danych
`select(-day)` - usunięcie kolumny day
`mutate(month = factor(month))` - przekształcenie zmiennej 'month' w zmienną kategoryczną (czynnik)

## Podląd struktury danych oraz zależności między zmiennymi
```{r}
air %>%
  ggplot(aes(
    x = solar.r,
    y = ozone,
    col = month,
    group = month
  )) +
  geom_point() +
  geom_smooth(method = lm, se = F) +
  scale_color_viridis_d(option = "C", end = .9)
```
Przy niskim promieniowaniu słonecznym stężenie ozonu w powietrzu było jest niższe, wraz ze wzrostem promieniowania rośnie również ilość ozonu. 
***
Sprawdzenie braków danych

```{r}
air |> is.na() |> as_tibble() |> summarise_all(sum)
```
Nie posiadamy brakujących danych.

## Dopasowanie modelu

```{r}
lm_mod <-  
  linear_reg() |> 
  set_engine("lm")
```

Model został swtworzony, a jego silnikiem została metoda najmniejszych kwadratów.

Teraz przeprowadzono estymację modelu\

```{r}
lm_fit <- 
  lm_mod |> 
  fit(ozone ~ solar.r * month, data = air)
lm_fit
```
Lepszy sposób wizoalizacji danych:

```{r}
lm_fit |> tidy(conf.int = T)
```

Wygenerowanie wykresu kropek i wąsów naszych wyników regresji za pomocą pakietu dotwisker.

```{r}
lm_fit |> 
  tidy() |> 
  dwplot(vline = geom_vline(xintercept = 0, color = "grey50", linetype = 2), 
         dot_args = list(size = 2, color = "black"), 
         whisker_args = list(color = "black")) +
  theme_bw()
```

Same w sobie miesiące mają bardzo mały wpływ. Jednak zmiany podczas miesięcy duży.

## Predykcja danych

Przeprowadzono teraz predykcje średniego steżenia ozonu w kolejnych miesiącach

```{r}
new_points <- expand.grid(solar.r = seq(0, 340, 40),
                          month = c('5', '6','7', '8', '9'))
```


```{r}
mean_pred <- predict(object = lm_fit, new_data = new_points)

conf_pred <- predict(object = lm_fit, new_data = new_points, type = "conf_int")

lm_pred <- 
  new_points |> 
  bind_cols(mean_pred) |> 
  bind_cols(conf_pred)

lm_pred |>
  ggplot(aes(x = month,
             y = .pred)) +
  geom_point() +
  geom_errorbar(aes(ymin = .pred_lower,
                    ymax = .pred_upper),
                width = 0.2) +
  facet_wrap(~ solar.r) +
  theme_bw() +
  labs(y = "ozone c")
```


